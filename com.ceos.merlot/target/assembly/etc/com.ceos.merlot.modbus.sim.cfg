#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

################################################################################
# Scalar types
# ------------
#
#"boolean";
#"byte";
#"short";
#"int";
#"long";
#"ubyte";
#"ushort";
#"uint";
#"ulong";
#"float";
#"double";
#"string";
#
#
# Simple function
# ---------------
#
# Accept the following variables:
# . name:
# . device_address: 
# . function_code: 'func', fixed string.
# . scan_rate: Scan of the function in milliseconds. Always > 100 ms.
# . f_modbus_address: Modbus address for value returned from function.
# . x_modbus_address: Modbus address for variable x.
# . y_modbus_address: Modbus address for variable y.
# . z_modbus_address: Modbus address for variable z.
# . function: String that represents the function.
#
# Example:
# suma=12,func,1,input-register:100:float,holding-register:104:float,holding-register:108:float,holding-register:112:float,x+y+z
#
#
# Random function
# ---------------
#
# Accept the following variables
# . name:
# . device_address: 
# . function_code: 'rand', fixed string.
# . scan_rate: Scan of the function in milliseconds. Always > 100 ms.
# . f_modbus_address:
#
# Example:
# suma=12,func,1,input-register:100:float,holding-register:104:float,holding-register:108:float,holding-register:112:float,x+y+z
#
# Signal function
# ---------------
#
# Accept the following variables:
# . name:
# . device_address: 
# . function_code: 'signal', fixed string.
# . scan_rate: Scan of the function in milliseconds. Always == 100 ms.
# . f_modbus_address: Modbus address for value returned from function.
# . frequency: Modbus address for variable frecuencie.
# . phase: Modbus address for variable y.
# . amplitude: Modbus address for variable z.
# . signal: String that represents the signal.['square','sine','triangular','sawtooth']
#
# Example:
# sine=12,signal,100,input-register:100:float,holding-register:104:float,holding-register:108:float,holding-register:112:sine
################################################################################




